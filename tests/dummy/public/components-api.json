{"boolean-field":[{"description":"This component wraps `Yup.bool()` and validates boolean values.","tags":[{"title":"class","description":null,"type":null,"name":"BooleanField"}]},{"description":"The value of the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"value"},{"title":"yielded","description":null}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]}],"date-field":[{"description":"This component wraps `Yup.date()` and validates date values.","tags":[{"title":"class","description":null,"type":null,"name":"DateField"}]},{"description":"The value of the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Date"},"name":"value"},{"title":"yielded","description":null}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"The minimum date allowed for the field's `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Date"},"name":"min"}]},{"description":"The maximum date allowed for the field's `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Date"},"name":"max"}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]}],"form-field":[{"description":"The base component for FormField components. FormFields are responsible for\nproviding the schema for validating the fields `value`. This base component\nis responsible for reading the schema for validation and setting up the fields\nstate, such as errors. This component also registers with its parent, if part\nof a ValidationForm.","tags":[{"title":"class","description":null,"type":null,"name":"FormField"}]},{"description":"Properties that are yielded to the template.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"yieldedProperties"}]},{"description":"Called when the field's value is changed. Returns the transformed data value if valid;\notherwise returns the input value.","tags":[{"title":"function","description":null,"name":"onChange"},{"title":"param","description":null,"type":{"type":"AllLiteral"},"name":"value"},{"title":"action","description":null}]},{"description":"This is a Yup option that gets passed to the schema's validate method, which will fail validation\non its first invalid check.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"abortEarly"},{"title":"defaultValue","description":"false"}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"Mark the schema as required. All field values apart from `undefined` and `null` meet this requirement.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"required"},{"title":"defaultValue","description":"false"}]},{"description":"Set messages on this hash to override the default validation messages.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"validationMessages"}]},{"description":"The validation result of the latest computed `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Promise"},"name":"validation"},{"title":"private","description":null}]},{"description":"Enables validation to occur on the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"enabled"}]},{"description":"Flag `true` if there are 1 or more errors.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"hasErrors"},{"title":"yielded","description":null}]},{"description":"Flag `true` if component ran validation.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"didValidate"},{"title":"private","description":null}]},{"description":"Array that holds the ValidationErrors emitted by the schema.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Array"},"name":"errors"},{"title":"private","description":null}]},{"description":"Array that proxies the messages from field's `errors`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Array"},"name":"errorMessages"},{"title":"yielded","description":null}]},{"description":"Flag to display error messages. This * flag will be set to `true` when\nthe field detects its first `value` update.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"showErrorMessages"},{"title":"defaultValue","description":"false"}]},{"description":"Used to set `showErrorMessages=true` when the value first updates.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"showErrorMessagesOnUpdate"},{"title":"defaultValue","description":"true"}]},{"description":"If the field is `enabled`, the field will validate its `value`. If the validation passes,\nthe transformed value will be passed to its `onInput` or `onClick` handlers, if defined.\nIf the validation fails, errors will get added to the `errors` property, which populates\nthe fields `errorMessages`.","tags":[{"title":"function","description":null,"name":"readValidation"},{"title":"private","description":null}]},{"description":"The immediate parent form component that houses this field. For now, the\n`validation-form` component is the only component that can house form fields.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Component"},"name":"parent"}]},{"description":"The key that's used to serialize the data value.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"String"},"name":"name"}]}],"number-field":[{"description":"This component wraps `Yup.number()` and validates numeric values.","tags":[{"title":"class","description":null,"type":null,"name":"NumberField"}]},{"description":"The value of the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"value"},{"title":"yielded","description":null}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"Validates that field value is an integer.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"integer"}]},{"description":"Validates that field value is positive.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"positive"}]},{"description":"Validates that field value is negative.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"negative"}]},{"description":"Set the minimum allowed value for the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"min"}]},{"description":"Set the maximum allowed value for the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"max"}]},{"description":"Set a value that the field value should be less than.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"lt"}]},{"description":"Set a value that the field value should be greater than.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"gt"}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]}],"text-field":[{"description":"This component wraps `Yup.string()` and validates string values.","tags":[{"title":"class","description":null,"type":null,"name":"TextField"}]},{"description":"The value of the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"String"},"name":"value"},{"title":"yielded","description":null}]},{"description":"Specify a regex to match the field. Since this is within a template, only\nthe String form of the regex is permitted. ex. \"^\\d{5}$\"","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"String"},"name":"matches"}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"The validation subtype.","tags":[{"title":"property","description":"string|email|url","type":{"type":"NameExpression","name":"Enum"},"name":"type"},{"title":"defaultValue","description":"string"}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]},{"description":"The maximum number of characters allowed for the `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"charLimit"},{"title":"defaultValue","description":"0"}]},{"description":"Determines validity by measuring the length of the `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"charLimitSchema"},{"title":"private","description":null}]},{"description":"A yielded property the contains the number of allowable characters for the\nlength of the `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"charRemaining"},{"title":"yielded","description":null}]},{"description":"The validation result of the latest computed `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Promise"},"name":"validation"},{"title":"private","description":null}]}],"validation-form":[{"description":"A ValidationForm is a container for FormField components. By default, validations\nare async and its fields validations are collected during the form's submission\nprocess, invoking `onSubmit` with a hash of its fields validations.","tags":[{"title":"class","description":null,"type":null,"name":"ValidationForm"}]},{"description":"Sync forms perform additional logic to gather form data or collect errors.\nAfter `onSubmit` is invoked and the validations resolve, either `onSuccess`\nor `onReject` is invoked with a hash of data or errors. Set this value to `false`\nif you want to disable the `onSuccess` and `onReject` handlers.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"sync"},{"title":"defaultValue","description":"sync"}]},{"description":"FormFields register themselves with this property when they initialize.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Array"},"name":"formFields"},{"title":"private","description":null}]},{"description":"FormField errors are proxied to this property.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Array"},"name":"formFields"},{"title":"yielded","description":null}]},{"description":"A hashed collection of its FormFields validations, keyed by the fields'\n`name`.","tags":[]},{"description":"This method is invoked when the form submits, providing a hash of its fields'\nvalidations.","tags":[{"title":"function","description":null,"name":"onSubmit"},{"title":"param","description":"hash of the form fields' validations keyed by the fields' `name`","type":{"type":"NameExpression","name":"Object"},"name":"validations"},{"title":"action","description":null}]},{"description":"This flag holds the status of whether the form submitted, whether it was successful or not.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"didSubmit"},{"title":"defaultValue","description":"false"},{"title":"yielded","description":null}]},{"description":"This flag holds the status of whether or not the form has enabled its fields.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"didEnableFields"},{"title":"defaultValue","description":"false"},{"title":"private","description":null}]},{"description":"This flag holds the status of whether or not the form is validating or not.\nThis property is only for sync forms.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"isValidating"},{"title":"defaultValue","description":"false"},{"title":"sync","description":null},{"title":"yielded","description":null}]},{"description":"This flag holds the status of whether or not the form successfully validated.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"didSucceed"},{"title":"defaultValue","description":"false"},{"title":"sync","description":null},{"title":"yielded","description":null}]},{"description":"This flag holds the status of whether or not the form unsuccessfully validated.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"didReject"},{"title":"defaultValue","description":"false"},{"title":"sync","description":null},{"title":"yielded","description":null}]},{"description":"This method is invoked after the form has successfully validated, returning\na hash of the form fields' transformed data.","tags":[{"title":"function","description":null,"name":"onSuccess"},{"title":"param","description":"hash of the fields' data keyed by the fields' `name`","type":{"type":"NameExpression","name":"Object"},"name":"data"},{"title":"action","description":null}]},{"description":"This method is invoked after the form has unsuccessfully validated, returning\na hash of hte form fields' ValidationErrors.","tags":[{"title":"function","description":null,"name":"onReject"},{"title":"param","description":"hash of the fields' validationErrors keyed by the fields' `name`","type":{"type":"NameExpression","name":"Object"},"name":"validationErrors"},{"title":"action","description":null}]},{"description":"This method handles the form's submission process.","tags":[{"title":"function","description":null,"name":"submit"},{"title":"private","description":null}]}]}
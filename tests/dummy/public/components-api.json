{"boolean-field":[{"description":"This component is used for validating boolean values.","tags":[{"title":"class","description":null,"type":null,"name":"BooleanField"},{"title":"extends","description":null,"type":null,"name":"FormField"}]},{"description":"","tags":[{"title":"property","description":"The value of the field.","type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Boolean"}]},"name":"value"},{"title":"yielded","description":null}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]}],"date-field":[{"description":"This component is used for validating date values.","tags":[{"title":"class","description":null,"type":null,"name":"DateField"},{"title":"extends","description":null,"type":null,"name":"FormField"}]},{"description":"The value of the field.","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Date"}]},"name":"value"},{"title":"yielded","description":null}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Date"},{"type":"UndefinedLiteral"}]},"name":"min"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Date"},{"type":"UndefinedLiteral"}]},"name":"max"},{"title":"validationOption","description":null}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]}],"form-field":[{"description":"The base component for all form fields.","tags":[{"title":"class","description":null,"type":null,"name":"FormField"}]},{"description":"Called when the field's value is changed. Returns the transformed data value if valid;\notherwise returns the input value.","tags":[{"title":"function","description":null,"name":"onChange"},{"title":"action","description":null}]},{"description":"This is a Yup option that gets passed to the schema's validate method, which will fail validation\non its first invalid check.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"abortEarly"}]},{"description":"Flag to validate the field when the component initializes, as long as the field is `enabled`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"validateOnInit"}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"Mark the schema as required. All field values apart from `undefined` and `null` meet this requirement.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"required"},{"title":"validationOption","description":null},{"title":"defaultValue","description":"false"}]},{"description":"Set properties on this hash to override the default validation messages.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"validationMessages"}]},{"description":"The validation result of the latest computed `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Promise"},"name":"validation"},{"title":"private","description":null}]},{"description":"Enables validation to occur on the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"enabled"}]},{"description":"Array that holds the ValidationErrors emitted by the schema.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Array"},"name":"errors"},{"title":"private","description":null}]},{"description":"Array that proxies the messages from field's `errors`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Array"},"name":"errorMessages"},{"title":"yielded","description":null}]},{"description":"If the field is `enabled`, the field will validate its `value`. If the validation passes,\nthe transformed value will be passed to its `onInput` or `onClick` handlers, if defined.\nIf the validation fails, errors will get added to the `errors` property, which populates\nthe fields `errorMessages`.","tags":[{"title":"function","description":null,"name":"readValidation"},{"title":"private","description":null}]},{"description":"The immediate parent form component that houses this field. For now, the\n`validation-form` component is the only component that can house form fields.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Component"},"name":"parent"}]},{"description":"The key that's used to serialize the data value.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"String"},"name":"name"}]}],"number-field":[{"description":"This component is used for validating numeric values.","tags":[{"title":"class","description":null,"type":null,"name":"NumberField"},{"title":"extends","description":null,"type":null,"name":"FormField"}]},{"description":"","tags":[{"title":"property","description":"The value of the field.","type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"NameExpression","name":"Number"}]},"name":"value"},{"title":"yielded","description":null}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"integer"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"positive"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Boolean"},"name":"negative"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Number"},{"type":"UndefinedLiteral"}]},"name":"min"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Number"},{"type":"UndefinedLiteral"}]},"name":"max"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Number"},{"type":"UndefinedLiteral"}]},"name":"lt"},{"title":"validationOption","description":null}]},{"description":"","tags":[{"title":"property","description":null,"type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Number"},{"type":"UndefinedLiteral"}]},"name":"gt"},{"title":"validationOption","description":null}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]}],"text-field":[{"description":"This component is used for validating text values.","tags":[{"title":"class","description":null,"type":null,"name":"TextField"},{"title":"extends","description":null,"type":null,"name":"FormField"}]},{"description":"The value of the field.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"String"},"name":"value"},{"title":"yielded","description":null}]},{"description":"Specify a regex to match the field. Since this is within a template, only\nthe String form of the regex is permitted. ex. \"^\\d{5}$\"","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"String"},"name":"matches"},{"title":"validationOption","description":null}]},{"description":"These are the default validation messages set by the Ember Yup library.\nLeave the properties `undefined` to allow defaults to be set by Yup.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"defaultValidationMessages"},{"title":"private","description":null}]},{"description":"The validation subtype.","tags":[{"title":"property","description":"string|email|url","type":{"type":"NameExpression","name":"Enum"},"name":"type"},{"title":"validationOption","description":null},{"title":"defaultValue","description":"string"}]},{"description":"The primary schema that determines the fields validity.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"dataSchema"},{"title":"private","description":null}]},{"description":"The maximum number of characters allowed for the `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"charLimit"},{"title":"validationOption","description":null},{"title":"defaultValue","description":"0"}]},{"description":"Determines validity by measuring the length of the `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Object"},"name":"charLimitSchema"},{"title":"private","description":null}]},{"description":"A yielded property the contains the number of allowable characters for the\nlength of the `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Number"},"name":"charRemaining"},{"title":"yielded","description":null}]},{"description":"The validation result of the latest computed `value`.","tags":[{"title":"property","description":null,"type":{"type":"NameExpression","name":"Promise"},"name":"validation"},{"title":"private","description":null}]}],"validation-form":[]}